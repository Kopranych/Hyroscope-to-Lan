#include <avr/io.h>
#include <avr/interrupt.h>

////////////////////////////////////////ПЕРЕОПРЕДЕЛЕНИЯ/////////////////////////////////////////////
#define TW_BUS_FAIL        0x00//аппаратная ошибка шины
#define TW_START    	   0x08//отправлено условие старт
#define ReStart			   0x10//отправлен повторный старт
#define TW_MT_AD_ACK       0x18//ведущий послал адрес ведомого с битом для записи ведомый отозвался
#define TW_MT_AD_NACK      0x20//ведущий послал адрес ведомого с битом для записи ведомый не отозвался
#define TW_MT_DATA_ACK     0x28//ведущий послал данные и принял подтверждение 
#define TW_MT_DATA_NACK    0x30//ведущий послал данные и не принял подтверждение 
#define TW_MR_AD_ACK       0x40//ведущий послал адрес ведомого с битом для чтения ведомый отозвался
#define TW_MR_AD_NACK      0x48//ведущий послал адрес ведомого с битом для чтения ведомый не отозвался
#define TW_MR_DATA_ACK     0x50//ведущий принял данные и передал подтверждение
#define TW_MR_DATA_NACK    0x58//ведущий принял последний байт и передал NACK
#define MPU_6050_ADDRESS_W 0xD0//адрес гироскопа в режиме записи
#define MPU_6050_ADDRESS_R 0xD1//адрес гироскопа в режиме чтения
#define PWR_MGMT_1         0x6B//адрес регистра Power Management его необходимо занулить
#define TEMP_OUT_H         0x41//адрес старшего байта реистра измерения температуры
#define TEMP_OUT_L         0x42//адрес младшего байта реистра измерения температуры
#define ACCEL_XOUT_H       0x3B//адрес старшего байта реистра измерения X акселерометра
#define ACCEL_XOUT_L       0x3C//адрес младшего байта реистра измерения X акселерометра
#define ACCEL_YOUT_H       0x3D//адрес старшего байта реистра измерения Y акселерометра
#define ACCEL_YOUT_L       0x3E//адрес младшего байта реистра измерения Y акселерометра
#define ACCEL_ZOUT_H       0x3F//адрес старшего байта реистра измерения Z акселерометра
#define ACCEL_ZOUT_L       0x40//адрес младшего байта реистра измерения Z акселерометра
#define GYRO_XOUT_H        0x43//адрес старшего байта реистра измерения X гироскопа
#define GYRO_XOUT_L        0x44//адрес младшего байта реистра измерения X гироскопа
#define GYRO_YOUT_H        0x45//адрес старшего байта реистра измерения Y гироскопа
#define GYRO_YOUT_L        0x46//адрес младшего байта реистра измерения Y гироскопа
#define GYRO_ZOUT_H        0x47//адрес старшего байта реистра измерения Z гироскопа
#define GYRO_ZOUT_L        0x48//адрес младшего байта реистра измерения Z гироскопа
#define XA_TEST			   0x0D//
#define YA_TEST			   0x0E//
#define ZA_TEST			   0x0F//
/////////////////////////////////////////////////////////////////////////////////////////////////////




////////////////////////////////////////ФУНКЦИИ//////////////////////////////////////////////////////
void I2C_init();// инициализация шины I2c просто задаем нужную скорость
void I2C_start();  // Генерация условия СТАРТ
void I2C_stop(); // Генерация условия стоп
int I2C_tranciv_byte(unsigned char byte); // передача данных
char I2C_receiver_byte();// прием данных
char I2C_receiver_last_byte();// прием последнего байта
unsigned char get_status();//читаем статусный регистр
char MPU_I2C_R(unsigned char addrw,unsigned char ra, unsigned char addrr);//протокол чтения данных из модуля MPU-6050
char MPU_I2C_W(unsigned char addrw,unsigned char ra, unsigned char data);//протокол записи
/////////////////////////////////////////////////////////////////////////////////////////////////////
